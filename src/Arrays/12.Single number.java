https://leetcode.com/problems/single-number/

//Method -1
class Solution {
    public int singleNumber(int[] nums) {
        //int count=0;
        for(int i=0;i<nums.length;i++){
            int count=0;
            int num=nums[i];
            for(int j=0;j<nums.length;j++){
                if(nums[j]==num){
                    count++;
                }
            }
            if(count==1) return num;
        }
        return 0;
    }
}
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 */
//Method-2 : Using Hashing:
class Solution {
    public int singleNumber(int[] nums) {
        int maxi=nums[0];
        for(int i=0;i<nums.length;i++){
            maxi=Math.max(maxi,nums[i]);
        }
        int[] hash=new int[maxi+1];
        for(int i=0;i<nums.length;i++){
            hash[nums[i]]++;
        }
        for(int i=0;i<nums.length;i++){
            if(hash[nums[i]]==1) return nums[i];
        }
        return -1;
    }
}
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 */
//Method-3

class Solution {
    public int singleNumber(int[] nums) {
        int res=0;
        for(int i=0;i<nums.length;i++){
            res=res^nums[i];
        }
        return res;
    }
}
